# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `packs` gem.
# Please instead update this file by running `bin/tapioca gem packs`.

# source://packs//lib/packs/pack.rb#3
module Packs
  class << self
    # source://packs//lib/packs.rb#17
    sig { returns(T::Array[::Packs::Pack]) }
    def all; end

    # source://packs//lib/packs.rb#35
    sig { void }
    def bust_cache!; end

    # source://packs//lib/packs/configuration.rb#27
    sig { returns(::Packs::Configuration) }
    def config; end

    # @yield [config]
    #
    # source://packs//lib/packs/configuration.rb#33
    sig { params(blk: T.proc.params(arg0: ::Packs::Configuration).void).void }
    def configure(&blk); end

    # source://packs//lib/packs.rb#22
    sig { params(name: ::String).returns(T.nilable(::Packs::Pack)) }
    def find(name); end

    # source://packs//lib/packs.rb#27
    sig { params(file_path: T.any(::Pathname, ::String)).returns(T.nilable(::Packs::Pack)) }
    def for_file(file_path); end

    private

    # source://packs//lib/packs.rb#58
    sig { returns(T::Array[::Pathname]) }
    def package_glob_patterns; end

    # source://packs//lib/packs.rb#44
    sig { returns(T::Hash[::String, ::Packs::Pack]) }
    def packs_by_name; end
  end
end

# source://packs//lib/packs/configuration.rb#4
class Packs::Configuration
  # source://packs//lib/packs/configuration.rb#11
  sig { void }
  def initialize; end

  # source://packs//lib/packs/configuration.rb#16
  sig { returns(T::Array[::Pathname]) }
  def roots; end

  # source://packs//lib/packs/configuration.rb#8
  sig { params(roots: T::Array[::String]).void }
  def roots=(roots); end
end

# source://packs//lib/packs.rb#10
Packs::PACKAGE_FILE = T.let(T.unsafe(nil), String)

# source://packs//lib/packs/pack.rb#4
class Packs::Pack < ::T::Struct
  const :name, ::String
  const :path, ::Pathname
  const :relative_path, ::Pathname
  const :raw_hash, T::Hash[T.untyped, T.untyped]

  # source://packs//lib/packs/pack.rb#34
  sig { returns(::String) }
  def last_name; end

  # source://packs//lib/packs/pack.rb#39
  sig { returns(T::Hash[T.untyped, T.untyped]) }
  def metadata; end

  # source://packs//lib/packs/pack.rb#28
  sig { params(relative: T::Boolean).returns(::Pathname) }
  def yml(relative: T.unsafe(nil)); end

  class << self
    # source://packs//lib/packs/pack.rb#13
    sig { params(package_yml_absolute_path: ::Pathname).returns(::Packs::Pack) }
    def from(package_yml_absolute_path); end

    # source://sorbet-runtime/0.5.10479/lib/types/struct.rb#13
    def inherited(s); end
  end
end

# source://packs//lib/packs/private.rb#4
module Packs::Private
  class << self
    # source://packs//lib/packs/private.rb#8
    sig { returns(::Pathname) }
    def root; end
  end
end

# source://packs//lib/packs.rb#11
Packs::ROOTS = T.let(T.unsafe(nil), Array)
